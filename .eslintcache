[{"C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\index.js":"1","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\serviceWorker.js":"2","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\root\\Root.js":"3","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\api\\apiUrls.js":"4","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\recoil\\state.js":"5","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\themes\\mainTheme.js":"6","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\routing\\Router.js":"7","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\templates\\MainTemplate.js":"8","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\helpers\\routes.js":"9","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\views\\UncompletedTodos.js":"10","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\views\\CompletedTodos.js":"11","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\components\\Navbar\\Navbar.js":"12","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\components\\AddNewTodo\\AddNewTodo.js":"13","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\helpers\\todosTypes.js":"14","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\components\\TodoList\\TodoList.js":"15","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\components\\SearchTodoInput\\SearchTodoInput.js":"16","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\components\\TodoListItem\\TodoListItem.js":"17","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\index.js":"18","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\serviceWorker.js":"19","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\root\\Root.js":"20","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\routing\\Router.js":"21","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\themes\\mainTheme.js":"22","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\recoil\\state.js":"23","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\api\\apiUrls.js":"24","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\templates\\MainTemplate.js":"25","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\views\\UncompletedTodos.js":"26","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\helpers\\routes.js":"27","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\views\\CompletedTodos.js":"28","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\components\\Navbar\\Navbar.js":"29","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\components\\AddNewTodo\\AddNewTodo.js":"30","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\helpers\\todosTypes.js":"31","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\components\\TodoList\\TodoList.js":"32","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\components\\SearchTodoInput\\SearchTodoInput.js":"33","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\components\\TodoListItem\\TodoListItem.js":"34","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\components\\Pagination\\Pagination.js":"35"},{"size":584,"mtime":1621362604000,"results":"36","hashOfConfig":"37"},{"size":4948,"mtime":1621179468000,"results":"38","hashOfConfig":"37"},{"size":2986,"mtime":1623144532602,"results":"39","hashOfConfig":"37"},{"size":65,"mtime":1621365124000,"results":"40","hashOfConfig":"37"},{"size":894,"mtime":1623142638202,"results":"41","hashOfConfig":"37"},{"size":506,"mtime":1622290978142,"results":"42","hashOfConfig":"37"},{"size":615,"mtime":1621527110000,"results":"43","hashOfConfig":"37"},{"size":1020,"mtime":1622379548052,"results":"44","hashOfConfig":"37"},{"size":71,"mtime":1621447808000,"results":"45","hashOfConfig":"37"},{"size":1375,"mtime":1622379548092,"results":"46","hashOfConfig":"37"},{"size":1348,"mtime":1623843613183,"results":"47","hashOfConfig":"37"},{"size":9844,"mtime":1622449179782,"results":"48","hashOfConfig":"37"},{"size":4170,"mtime":1623145303835,"results":"49","hashOfConfig":"37"},{"size":91,"mtime":1621544368000,"results":"50","hashOfConfig":"37"},{"size":1321,"mtime":1623145090260,"results":"51","hashOfConfig":"37"},{"size":3228,"mtime":1623868142863,"results":"52","hashOfConfig":"37"},{"size":6497,"mtime":1623868092151,"results":"53","hashOfConfig":"37"},{"size":584,"mtime":1621362604000,"results":"54","hashOfConfig":"55"},{"size":4948,"mtime":1621179468000,"results":"56","hashOfConfig":"55"},{"size":1836,"mtime":1621546370000,"results":"57","hashOfConfig":"55"},{"size":615,"mtime":1621527110000,"results":"58","hashOfConfig":"55"},{"size":506,"mtime":1621534846000,"results":"59","hashOfConfig":"55"},{"size":566,"mtime":1621546250000,"results":"60","hashOfConfig":"55"},{"size":65,"mtime":1621365124000,"results":"61","hashOfConfig":"55"},{"size":924,"mtime":1621529120000,"results":"62","hashOfConfig":"55"},{"size":1010,"mtime":1621546002000,"results":"63","hashOfConfig":"55"},{"size":71,"mtime":1621447808000,"results":"64","hashOfConfig":"55"},{"size":907,"mtime":1621545954000,"results":"65","hashOfConfig":"55"},{"size":4688,"mtime":1621550029236,"results":"66","hashOfConfig":"55"},{"size":3688,"mtime":1621583432481,"results":"67","hashOfConfig":"55"},{"size":91,"mtime":1621544368000,"results":"68","hashOfConfig":"55"},{"size":667,"mtime":1621550008451,"results":"69","hashOfConfig":"55"},{"size":2813,"mtime":1621582066898,"results":"70","hashOfConfig":"55"},{"size":3219,"mtime":1621545280000,"results":"71","hashOfConfig":"55"},{"size":825,"mtime":1622291896858,"results":"72","hashOfConfig":"37"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"1u6cglp",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"75"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"75"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"75"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"75"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"75"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"75"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"7x2p2j",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"116"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"116"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"75"},"C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\index.js",[],["158","159"],"C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\serviceWorker.js",[],"C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\root\\Root.js",["160","161","162","163","164","165","166","167","168","169","170"],"import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { baseUrl } from \"../api/apiUrls\";\r\nimport {\r\n  unCompletedtodosState,\r\n  completedTodosState,\r\n  staticCompletedTodosState,\r\n  staticUnCompletedtodosState,\r\n  pageNumberState,\r\n  activePageState,\r\n  userState,\r\n  userId,\r\n} from \"../recoil/state\";\r\nimport Router from \"../routing/Router\";\r\nimport { ThemeProvider } from \"@theme-ui/theme-provider\";\r\nimport { mainTheme } from \"../themes/mainTheme\";\r\nimport MainTemplate from \"../templates/MainTemplate\";\r\n\r\nconst Root = () => {\r\n  const [user, setUser] = useRecoilState(userState);\r\n\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .post(\r\n  //       \"https://gorest.co.in/public-api/users\",\r\n  //       {\r\n  //         user_id: user,\r\n  //         email: \"email@email.pl\",\r\n  //         name: \"Testowy User\",\r\n  //         gender: \"Male\",\r\n  //         status: \"Active\",\r\n  //         message: \"test message\",\r\n  //       },\r\n  //       {\r\n  //         headers: {\r\n  //           Authorization:\r\n  //             \"Bearer 110cff21757d0e9d9e2b50d488826d283df916eaa90fd8421fe5bd8fe7caae18\",\r\n  //         },\r\n  //       }\r\n  //     )\r\n  //     .then((res) => console.log(res))\r\n  //     .catch((err) => console.log(err));\r\n  // }, [user]);\r\n\r\n  const [unCompletedTodos, setUnCompletedTodos] = useRecoilState(\r\n    unCompletedtodosState\r\n  );\r\n  const [completedTodos, setCompletedTodos] =\r\n    useRecoilState(completedTodosState);\r\n\r\n  const [staticCompletedTodos, setStaticCompletedTodos] = useRecoilState(\r\n    staticCompletedTodosState\r\n  );\r\n\r\n  const [staticUnCompletedTodos, setStaticUnCompletedTodos] = useRecoilState(\r\n    staticUnCompletedtodosState\r\n  );\r\n\r\n  const [pageNumber, setPageNumber] = useRecoilState(pageNumberState);\r\n  const [activePage, setActivePage] = useRecoilState(activePageState);\r\n\r\n  const [defaultUserId, setDefaultUserId] = useRecoilState(userId);\r\n\r\n  useEffect(() => {\r\n    getTodosFromApi();\r\n  }, [activePage]);\r\n\r\n  const getTodosFromApi = () => {\r\n    axios\r\n      .get(\r\n        `https://gorest.co.in/public-api/users/${defaultUserId}/todos?page=${activePage}`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        const tempUnCompletedTodos = res.data.data.filter(\r\n          (item) => item.completed === false\r\n        );\r\n        const tempCompletedTodos = res.data.data.filter(\r\n          (item) => item.completed === true\r\n        );\r\n        setPageNumber(res.data.meta.pagination.pages);\r\n        setUnCompletedTodos([...tempUnCompletedTodos]);\r\n        setStaticUnCompletedTodos([...tempUnCompletedTodos]);\r\n        setCompletedTodos([...tempCompletedTodos]);\r\n        setStaticCompletedTodos([...tempCompletedTodos]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={mainTheme}>\r\n      <MainTemplate>\r\n        <Router />\r\n      </MainTemplate>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\api\\apiUrls.js",[],"C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\recoil\\state.js",[],"C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\themes\\mainTheme.js",[],"C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\routing\\Router.js",[],"C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\templates\\MainTemplate.js",[],"C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\helpers\\routes.js",[],"C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\views\\UncompletedTodos.js",["171"],"import React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\n/** @jsxImportSource theme-ui */\r\nimport TodoList from \"../components/TodoList/TodoList\";\r\nimport { unCompletedtodosState } from \"../recoil/state\";\r\nimport { todosTypes } from \"../helpers/todosTypes\";\r\nimport SearchTodoInput from \"../components/SearchTodoInput/SearchTodoInput\";\r\nimport Pagination from \"../components/Pagination/Pagination\";\r\n\r\nconst UncompletedTodos = () => {\r\n  const [unCompletedTodos, setUnCompletedTodos] = useRecoilState(\r\n    unCompletedtodosState\r\n  );\r\n\r\n  return (\r\n    <div\r\n      sx={{\r\n        marginTop: \"25px\",\r\n      }}\r\n    >\r\n      <div\r\n        sx={{\r\n          \"@media screen and (max-width: 750px)\": {\r\n            display: \"grid\",\r\n            justifyContent: \"end\",\r\n          },\r\n        }}\r\n      >\r\n        <Pagination />\r\n      </div>\r\n\r\n      <div sx={{ display: \"grid\" }}>\r\n        <SearchTodoInput todosType={todosTypes.unCompleted} />\r\n\r\n        <h1\r\n          sx={{\r\n            fontFamily: \"Montserrat\",\r\n            textAlign: \"center\",\r\n            marginTop: \"11px\",\r\n            fontSize: \"18px\",\r\n          }}\r\n        >\r\n          Uncompleted Todos\r\n        </h1>\r\n      </div>\r\n\r\n      <TodoList\r\n        todosArray={unCompletedTodos}\r\n        todosType={todosTypes.unCompleted}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UncompletedTodos;\r\n","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\views\\CompletedTodos.js",["172"],"import React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport TodoList from \"../components/TodoList/TodoList\";\r\nimport { completedTodosState } from \"../recoil/state\";\r\n/** @jsxImportSource theme-ui */\r\nimport { todosTypes } from \"../helpers/todosTypes\";\r\nimport SearchTodoInput from \"../components/SearchTodoInput/SearchTodoInput\";\r\nimport Pagination from \"../components/Pagination/Pagination\";\r\nconst CompletedTodos = () => {\r\n  const [completedTodos, setCompletedTodos] =\r\n    useRecoilState(completedTodosState);\r\n\r\n  console.log(completedTodos);\r\n  return (\r\n    <div\r\n      sx={{\r\n        marginTop: \"25px\",\r\n      }}\r\n    >\r\n      <div\r\n        sx={{\r\n          \"@media screen and (max-width: 750px)\": {\r\n            display: \"grid\",\r\n            justifyContent: \"end\",\r\n          },\r\n        }}\r\n      >\r\n        <Pagination />\r\n      </div>\r\n      <div sx={{ display: \"grid\" }}>\r\n        <SearchTodoInput todosType={todosTypes.completed} />\r\n        <h1\r\n          sx={{\r\n            fontFamily: \"Montserrat\",\r\n            textAlign: \"center\",\r\n            marginTop: \"11px\",\r\n            fontSize: \"18px\",\r\n          }}\r\n        >\r\n          CompletedTodos\r\n        </h1>\r\n      </div>\r\n      <TodoList todosArray={completedTodos} todosType={todosTypes.completed} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompletedTodos;\r\n","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\components\\Navbar\\Navbar.js",["173","174"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { routes } from \"../../helpers/routes\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Tippy from \"@tippyjs/react\";\r\nimport { Grid } from \"theme-ui\";\r\nimport { mainTheme } from \"../../themes/mainTheme\";\r\n/** @jsxImportSource theme-ui */\r\n\r\nimport {\r\n  faPlusSquare,\r\n  faHome,\r\n  faClipboardList,\r\n  faClipboardCheck,\r\n  faUser,\r\n  faClock,\r\n  faListAlt,\r\n  faHistory,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { isAddNewTodoModalOpenState } from \"../../recoil/state\";\r\n\r\nconst Navbar = () => {\r\n  const [isAddNewTodoModalOpen, setIsAddNewTodoModalOpen] = useRecoilState(\r\n    isAddNewTodoModalOpenState\r\n  );\r\n\r\n  return (\r\n    <div\r\n      sx={{\r\n        backgroundColor: mainTheme.colors.navbarBg,\r\n        width: \"80px\",\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr\",\r\n        borderTopLeftRadius: \"40px\",\r\n        borderBottomLeftRadius: \"40px\",\r\n        textAlign: \"center\",\r\n        \"@media screen and (max-width: 40em)\": {\r\n          width: \"60px\",\r\n        },\r\n      }}\r\n    >\r\n      <div\r\n        sx={{\r\n          backgroundColor: mainTheme.colors.navbarBg,\r\n          width: \"90px\",\r\n          height: \"90vh\",\r\n          paddingTop: \"36px\",\r\n          justifyContent: \"center\",\r\n          borderTopLeftRadius: \"40px\",\r\n          borderBottomLeftRadius: \"40px\",\r\n\r\n          \"@media screen and (max-width: 1100px)\": {\r\n            width: \"50px\",\r\n            height: \"auto\",\r\n          },\r\n          \"@media screen and (max-width: 950px)\": {\r\n            width: \"40px\",\r\n            height: \"auto\",\r\n          },\r\n        }}\r\n      >\r\n        <div>\r\n          <FontAwesomeIcon\r\n            sx={{\r\n              backgroundColor: mainTheme.colors.navbarBg,\r\n              color: mainTheme.colors.checkIcon,\r\n              justifyContent: \"center\",\r\n              marginBottom: \"10px\",\r\n              padding: \"4px\",\r\n              \"@media screen and (max-width: 750px)\": {\r\n                fontSize: \"32px\",\r\n              },\r\n              \"@media screen and (max-width: 1100px)\": {\r\n                fontSize: \"34px\",\r\n              },\r\n            }}\r\n            icon={faHome}\r\n            size=\"3x\"\r\n          />\r\n        </div>\r\n\r\n        <Tippy\r\n          sx={{\r\n            backgroundColor: mainTheme.colors.mainPanelBg,\r\n            color: mainTheme.colors.fontColor,\r\n            borderRadius: \"5px\",\r\n            width: \"70px\",\r\n            height: \"30px\",\r\n            fontSize: \"12px\",\r\n            transition: \".25s all ease\",\r\n            display: \"grid\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            fontFamily: \"Montserrat\",\r\n          }}\r\n          content=\"Add task\"\r\n        >\r\n          <div\r\n            sx={{\r\n              backgroundColor: mainTheme.colors.navbarBg,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon\r\n              sx={{\r\n                color: \"#330099\",\r\n                cursor: \"pointer\",\r\n                \"@media screen and (max-width: 750px)\": {\r\n                  fontSize: \"32px\",\r\n                },\r\n                \"@media screen and (max-width: 1100px)\": {\r\n                  fontSize: \"34px\",\r\n                },\r\n              }}\r\n              icon={faPlusSquare}\r\n              size=\"3x\"\r\n              onClick={() => setIsAddNewTodoModalOpen(true)}\r\n            />\r\n          </div>\r\n        </Tippy>\r\n\r\n        <div\r\n          sx={{\r\n            paddingBottom: \"70px\",\r\n          }}\r\n        >\r\n          <FontAwesomeIcon\r\n            sx={{\r\n              backgroundColor: mainTheme.colors.navbarBg,\r\n              color: \"#fff\",\r\n              justifyContent: \"center\",\r\n              marginBottom: \"10px\",\r\n              padding: \"4px\",\r\n              \"@media screen and (max-width: 750px)\": {\r\n                fontSize: \"32px\",\r\n              },\r\n              \"@media screen and (max-width: 1100px)\": {\r\n                fontSize: \"34px\",\r\n              },\r\n            }}\r\n            icon={faUser}\r\n            size=\"4x\"\r\n          />\r\n          <FontAwesomeIcon\r\n            sx={{\r\n              backgroundColor: mainTheme.colors.navbarBg,\r\n              color: \"#fff\",\r\n              justifyContent: \"center\",\r\n              marginBottom: \"10px\",\r\n              padding: \"4px\",\r\n              \"@media screen and (max-width: 750px)\": {\r\n                fontSize: \"32px\",\r\n              },\r\n              \"@media screen and (max-width: 1100px)\": {\r\n                fontSize: \"34px\",\r\n              },\r\n            }}\r\n            icon={faClock}\r\n            size=\"3x\"\r\n          />\r\n          <FontAwesomeIcon\r\n            sx={{\r\n              backgroundColor: mainTheme.colors.navbarBg,\r\n              color: \"#fff\",\r\n              justifyContent: \"center\",\r\n              marginBottom: \"10px\",\r\n              padding: \"4px\",\r\n              \"@media screen and (max-width: 750px)\": {\r\n                fontSize: \"32px\",\r\n              },\r\n              \"@media screen and (max-width: 1100px)\": {\r\n                fontSize: \"34px\",\r\n              },\r\n            }}\r\n            icon={faListAlt}\r\n            size=\"3x\"\r\n          />\r\n          <FontAwesomeIcon\r\n            sx={{\r\n              backgroundColor: mainTheme.colors.navbarBg,\r\n              color: \"#fff\",\r\n              justifyContent: \"center\",\r\n              marginBottom: \"10px\",\r\n              padding: \"4px\",\r\n              \"@media screen and (max-width: 750px)\": {\r\n                fontSize: \"32px\",\r\n              },\r\n              \"@media screen and (max-width: 1100px)\": {\r\n                fontSize: \"34px\",\r\n              },\r\n            }}\r\n            icon={faHistory}\r\n            size=\"3x\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <nav\r\n        sx={{\r\n          backgroundColor: mainTheme.colors.navbarSecendary,\r\n          width: \"190px\",\r\n          paddingTop: \"36px\",\r\n\r\n          \"@media screen and (max-width: 1100px)\": {\r\n            width: \"100px\",\r\n          },\r\n          \"@media screen and (max-width: 750px)\": {\r\n            width: \"70px\",\r\n          },\r\n        }}\r\n      >\r\n        <h3\r\n          sx={{\r\n            marginBottom: \"16px\",\r\n\r\n            \"@media screen and (max-width: 750px)\": {\r\n              fontSize: \"12px\",\r\n            },\r\n          }}\r\n        >\r\n          My Tasks\r\n        </h3>\r\n\r\n        <ul>\r\n          <Tippy\r\n            sx={{\r\n              backgroundColor: mainTheme.colors.mainPanelBg,\r\n              color: mainTheme.colors.fontColor,\r\n              borderRadius: \"5px\",\r\n              width: \"70px\",\r\n              height: \"30px\",\r\n              fontSize: \"12px\",\r\n              transition: \".25s all ease\",\r\n              display: \"grid\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              marginLeft: \"120px\",\r\n              fontFamily: \"Montserrat\",\r\n            }}\r\n            content=\"Change\"\r\n          >\r\n            <li sx={{ marginBottom: \"20px\", fontSize: \"18px\" }}>\r\n              <Link\r\n                to={routes.home}\r\n                sx={{\r\n                  textDecoration: \"none\",\r\n                  color: mainTheme.colors.fontColor,\r\n                  \"@media screen and (max-width: 1200px)\": {\r\n                    fontSize: \"10px\",\r\n                  },\r\n                  \"@media screen and (max-width: 750px)\": {\r\n                    fontSize: \"10px\",\r\n                  },\r\n                }}\r\n              >\r\n                Uncompleted todos\r\n                <FontAwesomeIcon\r\n                  icon={faClipboardList}\r\n                  size=\"1x\"\r\n                  sx={{\r\n                    marginLeft: \"10px\",\r\n                    \"@media screen and (max-width: 1200px)\": {\r\n                      fontSize: \"15px\",\r\n                    },\r\n                    \"@media screen and (max-width: 750px)\": {\r\n                      fontSize: \"20px\",\r\n                    },\r\n                  }}\r\n                />\r\n              </Link>\r\n            </li>\r\n          </Tippy>\r\n\r\n          <Tippy\r\n            sx={{\r\n              backgroundColor: mainTheme.colors.mainPanelBg,\r\n              color: mainTheme.colors.fontColor,\r\n              borderRadius: \"5px\",\r\n              width: \"70px\",\r\n              height: \"30px\",\r\n              fontSize: \"12px\",\r\n              transition: \".25s all ease\",\r\n              display: \"grid\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              marginLeft: \"120px\",\r\n              marginTop: \"88px\",\r\n              fontFamily: \"Montserrat\",\r\n            }}\r\n            content=\"Change\"\r\n          >\r\n            <li>\r\n              <Link\r\n                to={routes.completed}\r\n                sx={{\r\n                  textDecoration: \"none\",\r\n                  color: mainTheme.colors.fontColor,\r\n                  fontSize: \"18px\",\r\n                  \"@media screen and (max-width: 1200px)\": {\r\n                    fontSize: \"10px\",\r\n                  },\r\n                  \"@media screen and (max-width: 750px)\": {\r\n                    fontSize: \"10px\",\r\n                  },\r\n                }}\r\n              >\r\n                Completed todos\r\n                <FontAwesomeIcon\r\n                  icon={faClipboardCheck}\r\n                  size=\"1x\"\r\n                  sx={{\r\n                    marginLeft: \"10px\",\r\n                    \"@media screen and (max-width: 1200px)\": {\r\n                      fontSize: \"18px\",\r\n                    },\r\n                    \"@media screen and (max-width: 750px)\": {\r\n                      fontSize: \"20px\",\r\n                    },\r\n                  }}\r\n                />\r\n              </Link>\r\n            </li>\r\n          </Tippy>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\components\\AddNewTodo\\AddNewTodo.js",["175","176","177"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { mainTheme } from \"../../themes/mainTheme\";\r\n/** @jsxImportSource theme-ui */\r\n\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  isAddNewTodoModalOpenState,\r\n  unCompletedtodosState,\r\n  userId,\r\n} from \"../../recoil/state\";\r\nimport axios from \"axios\";\r\n/** @jsxImportSource theme-ui */\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    outline: \"none\",\r\n    width: \"40vw\",\r\n    height: \"60vh\",\r\n    borderRadius: \"40px\",\r\n  },\r\n}));\r\n\r\nconst AddNewTodo = () => {\r\n  const classes = useStyles();\r\n\r\n  const [isAddNewTodoModalOpen, setIsAddNewTodoModalOpen] = useRecoilState(\r\n    isAddNewTodoModalOpenState\r\n  );\r\n\r\n  const [unCompletedTodos, setUnCompletedTodos] = useRecoilState(\r\n    unCompletedtodosState\r\n  );\r\n  const [defaultUserId, setDefaultUserId] = useRecoilState(userId);\r\n\r\n  const handleAddNewTodoForm = (e) => {\r\n    console.log(defaultUserId);\r\n    e.preventDefault();\r\n\r\n    const todoTitle = e.target.todoTitle.value;\r\n    const todoId = Math.floor(Math.random() * 10000);\r\n\r\n    const newTodo = {\r\n      completed: false,\r\n      created_at: new Date(),\r\n      title: todoTitle,\r\n      updated_at: new Date(),\r\n      user_id: defaultUserId,\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        \"https://gorest.co.in/public-api/todos\",\r\n        { ...newTodo },\r\n        {\r\n          headers: {\r\n            Authorization:\r\n              \"Bearer 110cff21757d0e9d9e2b50d488826d283df916eaa90fd8421fe5bd8fe7caae18\",\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        newTodo.id = res.data.data.id;\r\n        setUnCompletedTodos([...unCompletedTodos, newTodo]);\r\n        setIsAddNewTodoModalOpen(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    e.target.reset();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      className={classes.modal}\r\n      open={isAddNewTodoModalOpen}\r\n      onClose={() => setIsAddNewTodoModalOpen(false)}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n    >\r\n      <Fade in={isAddNewTodoModalOpen}>\r\n        <div className={classes.paper}>\r\n          <h2\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginBottom: \"50px\",\r\n            }}\r\n          >\r\n            Add new todo\r\n          </h2>\r\n          <form\r\n            onSubmit={handleAddNewTodoForm}\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <textarea\r\n              name=\"todoTitle\"\r\n              sx={{\r\n                resize: \"none\",\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                borderRadius: \"20px\",\r\n                padding: \"14px\",\r\n                outline: \"none\",\r\n              }}\r\n              cols=\"30\"\r\n              rows=\"12\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              sx={{\r\n                marginTop: \"10px\",\r\n                width: \"84px\",\r\n                height: \"24px\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px\",\r\n                outline: \"none\",\r\n                backgroundColor: mainTheme.colors.checkIcon,\r\n                fontFamily: \"Montserrat\",\r\n              }}\r\n            >\r\n              Add\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewTodo;\r\n","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\helpers\\todosTypes.js",[],"C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\components\\TodoList\\TodoList.js",["178"],"import React from \"react\";\r\nimport { mainTheme } from \"../../themes/mainTheme\";\r\n/** @jsxImportSource theme-ui */\r\n\r\nimport TodoListItem from \"../TodoListItem/TodoListItem\";\r\n\r\nconst TodoList = ({ todosArray, todosType }) => {\r\n  console.log(todosArray);\r\n\r\n  return (\r\n    <ul\r\n      sx={{\r\n        height: \"70vh\",\r\n        overflowY: \"auto\",\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr 1fr\",\r\n        marginRight: \"6px\",\r\n        paddingTop: \"20px\",\r\n\r\n        \"@media screen and (max-width: 1100px)\": {\r\n          gridTemplateColumns: \" 1fr 1fr\",\r\n\r\n          justifyContent: \"center\",\r\n        },\r\n        \"@media screen and (max-width: 650px)\": {\r\n          gridTemplateColumns: \" 1fr\",\r\n\r\n          justifyContent: \"center\",\r\n        },\r\n      }}\r\n    >\r\n      {todosArray.map((todo) => (\r\n        <li\r\n          sx={{\r\n            \"@media screen and (max-width: 1100px)\": {\r\n              display: \"grid\",\r\n              justifyContent: \"center\",\r\n            },\r\n            \"@media screen and (max-width: 650px)\": {\r\n              display: \"grid\",\r\n              justifyContent: \"center\",\r\n            },\r\n          }}\r\n          key={todo.id}\r\n        >\r\n          <TodoListItem {...todo} todosType={todosType} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\components\\SearchTodoInput\\SearchTodoInput.js",["179","180","181","182","183"],"C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\components\\TodoListItem\\TodoListItem.js",["184"],"C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\index.js",[],["185","186"],"C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\serviceWorker.js",[],"C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\root\\Root.js",["187","188","189","190","191"],"import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { baseUrl } from \"../api/apiUrls\";\r\nimport {\r\n  unCompletedtodosState,\r\n  completedTodosState,\r\n  staticCompletedTodosState,\r\n  staticUnCompletedtodosState,\r\n} from \"../recoil/state\";\r\nimport Router from \"../routing/Router\";\r\nimport { ThemeProvider } from \"@theme-ui/theme-provider\";\r\nimport { mainTheme } from \"../themes/mainTheme\";\r\nimport MainTemplate from \"../templates/MainTemplate\";\r\n\r\nconst Root = () => {\r\n  const [unCompletedTodos, setUnCompletedTodos] = useRecoilState(\r\n    unCompletedtodosState\r\n  );\r\n  const [completedTodos, setCompletedTodos] =\r\n    useRecoilState(completedTodosState);\r\n\r\n  const [staticCompletedTodos, setStaticCompletedTodos] = useRecoilState(\r\n    staticCompletedTodosState\r\n  );\r\n\r\n  const [staticUnCompletedTodos, setStaticUnCompletedTodos] = useRecoilState(\r\n    staticUnCompletedtodosState\r\n  );\r\n\r\n  useEffect(() => {\r\n    getTodosFromApi();\r\n  }, []);\r\n\r\n  const getTodosFromApi = () => {\r\n    axios\r\n      .get(baseUrl)\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        const tempUnCompletedTodos = res.data.data.filter(\r\n          (item) => item.completed === false\r\n        );\r\n        const tempCompletedTodos = res.data.data.filter(\r\n          (item) => item.completed === true\r\n        );\r\n\r\n        setUnCompletedTodos([...tempUnCompletedTodos]);\r\n        setStaticUnCompletedTodos([...tempUnCompletedTodos]);\r\n        setCompletedTodos([...tempCompletedTodos]);\r\n        setStaticCompletedTodos([...tempCompletedTodos]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={mainTheme}>\r\n      <MainTemplate>\r\n        <Router />\r\n      </MainTemplate>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\routing\\Router.js",[],"C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\themes\\mainTheme.js",[],"C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\recoil\\state.js",[],"C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\api\\apiUrls.js",[],"C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\templates\\MainTemplate.js",[],"C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\views\\UncompletedTodos.js",["192"],"import React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\n/** @jsxImportSource theme-ui */\r\nimport TodoList from \"../components/TodoList/TodoList\";\r\nimport { unCompletedtodosState } from \"../recoil/state\";\r\nimport { todosTypes } from \"../helpers/todosTypes\";\r\nimport SearchTodoInput from \"../components/SearchTodoInput/SearchTodoInput\";\r\n\r\nconst UncompletedTodos = () => {\r\n  const [unCompletedTodos, setUnCompletedTodos] = useRecoilState(\r\n    unCompletedtodosState\r\n  );\r\n\r\n  return (\r\n    <div\r\n      sx={{\r\n        marginTop: \"25px\",\r\n      }}\r\n    >\r\n      <div sx={{ display: \"flex\", marginBottom: \"20px\", alignItems: \"center\" }}>\r\n        <SearchTodoInput todosType={todosTypes.unCompleted} />\r\n\r\n        <h1 sx={{ marginLeft: \"87px\", fontFamily: \"Montserrat\" }}>\r\n          Uncompleted Todos\r\n        </h1>\r\n      </div>\r\n      <TodoList\r\n        todosArray={unCompletedTodos}\r\n        todosType={todosTypes.unCompleted}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UncompletedTodos;\r\n","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\helpers\\routes.js",[],"C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\views\\CompletedTodos.js",["193"],"import React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport TodoList from \"../components/TodoList/TodoList\";\r\nimport { completedTodosState } from \"../recoil/state\";\r\n/** @jsxImportSource theme-ui */\r\nimport { todosTypes } from \"../helpers/todosTypes\";\r\nimport SearchTodoInput from \"../components/SearchTodoInput/SearchTodoInput\";\r\nconst CompletedTodos = () => {\r\n  const [completedTodos, setCompletedTodos] =\r\n    useRecoilState(completedTodosState);\r\n  return (\r\n    <div\r\n      sx={{\r\n        marginTop: \"25px\",\r\n      }}\r\n    >\r\n      <div sx={{ display: \"flex\", marginBottom: \"20px\", alignItems: \"center\" }}>\r\n        <SearchTodoInput todosType={todosTypes.completed} />\r\n        <h1 sx={{ marginLeft: \"87px\" }}>CompletedTodos</h1>\r\n      </div>\r\n\r\n      <TodoList todosArray={completedTodos} todosType={todosTypes.completed} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompletedTodos;\r\n","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\components\\Navbar\\Navbar.js",["194","195"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { routes } from \"../../helpers/routes\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Grid } from \"theme-ui\";\r\nimport { mainTheme } from \"../../themes/mainTheme\";\r\n/** @jsxImportSource theme-ui */\r\n\r\nimport {\r\n  faPlusSquare,\r\n  faHome,\r\n  faClipboardList,\r\n  faClipboardCheck,\r\n  faUser,\r\n  faClock,\r\n  faListAlt,\r\n  faHistory,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { isAddNewTodoModalOpenState } from \"../../recoil/state\";\r\n\r\nconst Navbar = () => {\r\n  const [isAddNewTodoModalOpen, setIsAddNewTodoModalOpen] = useRecoilState(\r\n    isAddNewTodoModalOpenState\r\n  );\r\n\r\n  return (\r\n    <div\r\n      sx={{\r\n        backgroundColor: mainTheme.colors.navbarBg,\r\n        width: \"80px\",\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr\",\r\n        borderTopLeftRadius: \"40px\",\r\n        borderBottomLeftRadius: \"40px\",\r\n        textAlign: \"center\",\r\n      }}\r\n    >\r\n      <div\r\n        sx={{\r\n          backgroundColor: mainTheme.colors.navbarBg,\r\n          width: \"80px\",\r\n          height: \"90vh\",\r\n          paddingTop: \"36px\",\r\n          justifyContent: \"center\",\r\n          borderTopLeftRadius: \"40px\",\r\n          borderBottomLeftRadius: \"40px\",\r\n        }}\r\n      >\r\n        <div>\r\n          <FontAwesomeIcon\r\n            sx={{\r\n              backgroundColor: mainTheme.colors.navbarBg,\r\n              color: mainTheme.colors.checkIcon,\r\n              justifyContent: \"center\",\r\n              marginBottom: \"10px\",\r\n              padding: \"4px\",\r\n            }}\r\n            icon={faHome}\r\n            size=\"3x\"\r\n          />\r\n        </div>\r\n        <div\r\n          sx={{\r\n            backgroundColor: mainTheme.colors.navbarBg,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon\r\n            sx={{\r\n              color: \"#330099\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            icon={faPlusSquare}\r\n            size=\"3x\"\r\n            onClick={() => setIsAddNewTodoModalOpen(true)}\r\n          />\r\n        </div>\r\n        <div\r\n          sx={{\r\n            paddingBottom: \"70px\",\r\n          }}\r\n        >\r\n          <FontAwesomeIcon\r\n            sx={{\r\n              backgroundColor: mainTheme.colors.navbarBg,\r\n              color: \"#fff\",\r\n              justifyContent: \"center\",\r\n              marginBottom: \"10px\",\r\n              padding: \"4px\",\r\n            }}\r\n            icon={faUser}\r\n            size=\"3x\"\r\n          />\r\n          <FontAwesomeIcon\r\n            sx={{\r\n              backgroundColor: mainTheme.colors.navbarBg,\r\n              color: \"#fff\",\r\n              justifyContent: \"center\",\r\n              marginBottom: \"10px\",\r\n              padding: \"4px\",\r\n            }}\r\n            icon={faClock}\r\n            size=\"3x\"\r\n          />\r\n          <FontAwesomeIcon\r\n            sx={{\r\n              backgroundColor: mainTheme.colors.navbarBg,\r\n              color: \"#fff\",\r\n              justifyContent: \"center\",\r\n              marginBottom: \"10px\",\r\n              padding: \"4px\",\r\n            }}\r\n            icon={faListAlt}\r\n            size=\"3x\"\r\n          />\r\n          <FontAwesomeIcon\r\n            sx={{\r\n              backgroundColor: mainTheme.colors.navbarBg,\r\n              color: \"#fff\",\r\n              justifyContent: \"center\",\r\n              marginBottom: \"10px\",\r\n              padding: \"4px\",\r\n            }}\r\n            icon={faHistory}\r\n            size=\"3x\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <nav\r\n        sx={{\r\n          backgroundColor: mainTheme.colors.navbarSecendary,\r\n          width: \"190px\",\r\n          paddingTop: \"36px\",\r\n        }}\r\n      >\r\n        <h3 sx={{ marginBottom: \"16px\" }}>My Tasks</h3>\r\n\r\n        <ul>\r\n          <li sx={{ marginBottom: \"20px\" }}>\r\n            <Link\r\n              to={routes.home}\r\n              sx={{ textDecoration: \"none\", color: mainTheme.colors.fontColor }}\r\n            >\r\n              Uncompleted todos\r\n              <FontAwesomeIcon\r\n                icon={faClipboardList}\r\n                size=\"1x\"\r\n                sx={{ marginLeft: \"10px\" }}\r\n              />\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link\r\n              to={routes.completed}\r\n              sx={{ textDecoration: \"none\", color: mainTheme.colors.fontColor }}\r\n            >\r\n              Completed todos\r\n              <FontAwesomeIcon\r\n                icon={faClipboardCheck}\r\n                size=\"1x\"\r\n                sx={{ marginLeft: \"10px\" }}\r\n              />\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\components\\AddNewTodo\\AddNewTodo.js",["196"],"C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\helpers\\todosTypes.js",[],"C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\components\\TodoList\\TodoList.js",["197"],"import React from \"react\";\r\nimport { mainTheme } from \"../../themes/mainTheme\";\r\n/** @jsxImportSource theme-ui */\r\n\r\nimport TodoListItem from \"../TodoListItem/TodoListItem\";\r\n\r\nconst TodoList = ({ todosArray, todosType }) => {\r\n  return (\r\n    <ul\r\n      sx={{\r\n        height: \"70vh\",\r\n        overflowY: \"auto\",\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr 1fr\",\r\n        marginRight: \"6px\",\r\n        paddingTop: \"20px\",\r\n      }}\r\n    >\r\n      {todosArray.map((todo) => (\r\n        <li sx={{}} key={todo.id}>\r\n          <TodoListItem {...todo} todosType={todosType} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\components\\SearchTodoInput\\SearchTodoInput.js",["198","199","200","201","202"],"import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { todosTypes } from \"../../helpers/todosTypes\";\r\nimport {\r\n  completedTodosState,\r\n  staticCompletedTodosState,\r\n  staticUnCompletedtodosState,\r\n  unCompletedtodosState,\r\n} from \"../../recoil/state\";\r\nimport { useRecoilState } from \"recoil\";\r\n/** @jsxImportSource theme-ui */\r\n\r\nconst SearchTodoInput = ({ todosType }) => {\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [unCompletedTodos, setUnCompletedTodos] = useRecoilState(\r\n    unCompletedtodosState\r\n  );\r\n  const [completedTodos, setCompletedTodos] =\r\n    useRecoilState(completedTodosState);\r\n\r\n  const [staticCompletedTodos, setStaticCompletedTodos] = useRecoilState(\r\n    staticCompletedTodosState\r\n  );\r\n\r\n  const [staticUnCompletedTodos, setStaticUnCompletedTodos] = useRecoilState(\r\n    staticUnCompletedtodosState\r\n  );\r\n\r\n  const handleSearchInputChange = (e) => {\r\n    setSearchInput(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    searchTodo();\r\n  }, [searchInput]);\r\n\r\n  const searchTodo = () => {\r\n    if (todosType === todosTypes.unCompleted) {\r\n      if (searchInput.length !== 0) {\r\n        const filteredTodos = staticUnCompletedTodos.filter(\r\n          (todo) =>\r\n            todo.title.toLowerCase().slice(0, searchInput.length) ===\r\n            searchInput.toLowerCase()\r\n        );\r\n\r\n        setUnCompletedTodos([...filteredTodos]);\r\n      } else {\r\n        setUnCompletedTodos([...staticUnCompletedTodos]);\r\n      }\r\n    } else {\r\n      if (searchInput.length !== 0) {\r\n        const filteredTodos = staticCompletedTodos.filter(\r\n          (todo) =>\r\n            todo.title.toLowerCase().slice(0, searchInput.length) ===\r\n            searchInput.toLowerCase()\r\n        );\r\n\r\n        setCompletedTodos([...filteredTodos]);\r\n      } else {\r\n        setCompletedTodos([...staticCompletedTodos]);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        sx={{\r\n          borderTopLeftRadius: \"10px\",\r\n          borderBottomLeftRadius: \"10px\",\r\n          borderTopRightRadius: \"10px\",\r\n          borderBottomRightRadius: \"10px\",\r\n          border: \"none\",\r\n          outline: \"none\",\r\n          width: \"200px\",\r\n          height: \"30px\",\r\n          textAlign: \"center\",\r\n          marginRight: \"5px\",\r\n          fontFamily: \"Montserrat\",\r\n        }}\r\n        value={searchInput}\r\n        onChange={handleSearchInputChange}\r\n        type=\"search\"\r\n        placeholder=\"search task\"\r\n      />\r\n      <FontAwesomeIcon\r\n        sx={{\r\n          display: \"grid\",\r\n          alingItem: \"center\",\r\n          color: \"#fff\",\r\n        }}\r\n        icon={faSearch}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchTodoInput;\r\n","C:\\Users\\Barbara\\Desktop\\Kodilla\\lista-todo\\src\\components\\TodoListItem\\TodoListItem.js",[],"C:\\Users\\Barbara\\Desktop\\Kodilla\\list-todo\\src\\components\\Pagination\\Pagination.js",["203","204"],"import React from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { activePageState, pageNumberState } from \"../../recoil/state\";\r\nimport \"./Pagination.css\";\r\n\r\nconst Pagination = () => {\r\n  const [pageNumber, setPageNumber] = useRecoilState(pageNumberState);\r\n  const [activePage, setActivePage] = useRecoilState(activePageState);\r\n\r\n  return (\r\n    <ReactPaginate\r\n      previousLabel={\"<\"}\r\n      nextLabel={\">\"}\r\n      breakLabel={\"...\"}\r\n      pageCount={pageNumber}\r\n      marginPagesDisplayed={2}\r\n      pageRangeDisplayed={5}\r\n      onPageChange={(page) => setActivePage(page.selected)}\r\n      containerClassName={\"pagination\"}\r\n      activeClassName={\"active\"}\r\n      onPageActive={(page) => console.log(page)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n",{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":4,"column":10,"nodeType":"211","messageId":"212","endLine":4,"endColumn":17},{"ruleId":"209","severity":1,"message":"213","line":21,"column":10,"nodeType":"211","messageId":"212","endLine":21,"endColumn":14},{"ruleId":"209","severity":1,"message":"214","line":21,"column":16,"nodeType":"211","messageId":"212","endLine":21,"endColumn":23},{"ruleId":"209","severity":1,"message":"215","line":46,"column":10,"nodeType":"211","messageId":"212","endLine":46,"endColumn":26},{"ruleId":"209","severity":1,"message":"216","line":49,"column":10,"nodeType":"211","messageId":"212","endLine":49,"endColumn":24},{"ruleId":"209","severity":1,"message":"217","line":52,"column":10,"nodeType":"211","messageId":"212","endLine":52,"endColumn":30},{"ruleId":"209","severity":1,"message":"218","line":56,"column":10,"nodeType":"211","messageId":"212","endLine":56,"endColumn":32},{"ruleId":"209","severity":1,"message":"219","line":60,"column":10,"nodeType":"211","messageId":"212","endLine":60,"endColumn":20},{"ruleId":"209","severity":1,"message":"220","line":61,"column":22,"nodeType":"211","messageId":"212","endLine":61,"endColumn":35},{"ruleId":"209","severity":1,"message":"221","line":63,"column":25,"nodeType":"211","messageId":"212","endLine":63,"endColumn":41},{"ruleId":"222","severity":1,"message":"223","line":67,"column":6,"nodeType":"224","endLine":67,"endColumn":18,"suggestions":"225"},{"ruleId":"209","severity":1,"message":"226","line":11,"column":28,"nodeType":"211","messageId":"212","endLine":11,"endColumn":47},{"ruleId":"209","severity":1,"message":"227","line":10,"column":26,"nodeType":"211","messageId":"212","endLine":10,"endColumn":43},{"ruleId":"209","severity":1,"message":"228","line":6,"column":10,"nodeType":"211","messageId":"212","endLine":6,"endColumn":14},{"ruleId":"209","severity":1,"message":"229","line":24,"column":10,"nodeType":"211","messageId":"212","endLine":24,"endColumn":31},{"ruleId":"209","severity":1,"message":"230","line":9,"column":26,"nodeType":"211","messageId":"212","endLine":9,"endColumn":40},{"ruleId":"209","severity":1,"message":"221","line":46,"column":25,"nodeType":"211","messageId":"212","endLine":46,"endColumn":41},{"ruleId":"209","severity":1,"message":"231","line":53,"column":11,"nodeType":"211","messageId":"212","endLine":53,"endColumn":17},{"ruleId":"209","severity":1,"message":"232","line":2,"column":10,"nodeType":"211","messageId":"212","endLine":2,"endColumn":19},{"ruleId":"209","severity":1,"message":"215","line":16,"column":10,"nodeType":"211","messageId":"212","endLine":16,"endColumn":26},{"ruleId":"209","severity":1,"message":"216","line":19,"column":10,"nodeType":"211","messageId":"212","endLine":19,"endColumn":24},{"ruleId":"209","severity":1,"message":"233","line":22,"column":32,"nodeType":"211","messageId":"212","endLine":22,"endColumn":55},{"ruleId":"209","severity":1,"message":"234","line":27,"column":34,"nodeType":"211","messageId":"212","endLine":27,"endColumn":59},{"ruleId":"222","severity":1,"message":"235","line":37,"column":6,"nodeType":"224","endLine":37,"endColumn":19,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":103,"column":25,"nodeType":"239","messageId":"240","endLine":103,"endColumn":27},{"ruleId":"205","replacedBy":"241"},{"ruleId":"207","replacedBy":"242"},{"ruleId":"209","severity":1,"message":"215","line":17,"column":10,"nodeType":"211","messageId":"212","endLine":17,"endColumn":26},{"ruleId":"209","severity":1,"message":"216","line":20,"column":10,"nodeType":"211","messageId":"212","endLine":20,"endColumn":24},{"ruleId":"209","severity":1,"message":"217","line":23,"column":10,"nodeType":"211","messageId":"212","endLine":23,"endColumn":30},{"ruleId":"209","severity":1,"message":"218","line":27,"column":10,"nodeType":"211","messageId":"212","endLine":27,"endColumn":32},{"ruleId":"222","severity":1,"message":"223","line":33,"column":6,"nodeType":"224","endLine":33,"endColumn":8,"suggestions":"243"},{"ruleId":"209","severity":1,"message":"226","line":10,"column":28,"nodeType":"211","messageId":"212","endLine":10,"endColumn":47},{"ruleId":"209","severity":1,"message":"227","line":9,"column":26,"nodeType":"211","messageId":"212","endLine":9,"endColumn":43},{"ruleId":"209","severity":1,"message":"228","line":5,"column":10,"nodeType":"211","messageId":"212","endLine":5,"endColumn":14},{"ruleId":"209","severity":1,"message":"229","line":23,"column":10,"nodeType":"211","messageId":"212","endLine":23,"endColumn":31},{"ruleId":"209","severity":1,"message":"230","line":9,"column":26,"nodeType":"211","messageId":"212","endLine":9,"endColumn":40},{"ruleId":"209","severity":1,"message":"232","line":2,"column":10,"nodeType":"211","messageId":"212","endLine":2,"endColumn":19},{"ruleId":"209","severity":1,"message":"215","line":16,"column":10,"nodeType":"211","messageId":"212","endLine":16,"endColumn":26},{"ruleId":"209","severity":1,"message":"216","line":19,"column":10,"nodeType":"211","messageId":"212","endLine":19,"endColumn":24},{"ruleId":"209","severity":1,"message":"233","line":22,"column":32,"nodeType":"211","messageId":"212","endLine":22,"endColumn":55},{"ruleId":"209","severity":1,"message":"234","line":26,"column":34,"nodeType":"211","messageId":"212","endLine":26,"endColumn":59},{"ruleId":"222","severity":1,"message":"235","line":36,"column":6,"nodeType":"224","endLine":36,"endColumn":19,"suggestions":"244"},{"ruleId":"209","severity":1,"message":"245","line":8,"column":22,"nodeType":"211","messageId":"212","endLine":8,"endColumn":35},{"ruleId":"209","severity":1,"message":"246","line":9,"column":10,"nodeType":"211","messageId":"212","endLine":9,"endColumn":20},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"no-unused-vars","'baseUrl' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'unCompletedTodos' is assigned a value but never used.","'completedTodos' is assigned a value but never used.","'staticCompletedTodos' is assigned a value but never used.","'staticUnCompletedTodos' is assigned a value but never used.","'pageNumber' is assigned a value but never used.","'setActivePage' is assigned a value but never used.","'setDefaultUserId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTodosFromApi'. Either include it or remove the dependency array.","ArrayExpression",["249"],"'setUnCompletedTodos' is assigned a value but never used.","'setCompletedTodos' is assigned a value but never used.","'Grid' is defined but never used.","'isAddNewTodoModalOpen' is assigned a value but never used.","'useRecoilValue' is defined but never used.","'todoId' is assigned a value but never used.","'mainTheme' is defined but never used.","'setStaticCompletedTodos' is assigned a value but never used.","'setStaticUnCompletedTodos' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'searchTodo'. Either include it or remove the dependency array.",["250"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["247"],["248"],["251"],["252"],"'setPageNumber' is assigned a value but never used.","'activePage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"255","fix":"259"},"Update the dependencies array to be: [activePage, getTodosFromApi]",{"range":"260","text":"261"},"Update the dependencies array to be: [searchInput, searchTodo]",{"range":"262","text":"263"},"Update the dependencies array to be: [getTodosFromApi]",{"range":"264","text":"265"},{"range":"266","text":"263"},[2003,2015],"[activePage, getTodosFromApi]",[1174,1187],"[searchInput, searchTodo]",[1009,1011],"[getTodosFromApi]",[1129,1142]]